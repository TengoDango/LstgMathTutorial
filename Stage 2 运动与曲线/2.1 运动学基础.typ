#import "../template.typ": *
#show: content => math-tutorial(content)

= #s2-1

这一章我们将讨论点的运动以及曲线的表示.
相信读者已经了解了一些相关的知识
(毕竟是做弹幕的),
那么我们主要讨论如何用数学探究运动和曲线的问题.

== 一维运动

首先我们从一维运动开始.
一维运动是点在一条直线上的运动, 在直线上建立数轴,
点的*位置*由数轴上的一个数即可确定,
一般用 $x$ 来表示, 点所处的*时刻*一般用 $t$ 表示.

我们对运动的探究基于这样一个假设:
点在一个时刻只能有一个位置.
我们把点在 $t$ 时刻的位置记作 $x(t)$
(是的, 就是函数的写法),
用关于 $t$ 的表达式描述 $x(t)$,
比如 $x(t) = 0.5 t^2$,
称为*运动的表达式*.
给定一个具体时刻, 代入运动表达式中,
就可以得到点在该时刻的位置.
比如在 $t=2$ 时刻,
点的位置 $x = x(2) = 0.5 dot 2^2 = 2$.

在时间段 $t_1 ~ t_2$ 内,
点的位置变化量 $Delta x := x(t_2) - x(t_1)$
称为点在该时间段内的*位移*.

我们可以用图象来直观展现一维运动.
在平面直角坐标系中,
以时间 $t$ 为横轴, 位置 $x$ 为纵轴,
将运动过程中的每个时刻和对应的位置 $(t,x)$ 绘制到坐标系中,
绘制的点将构成一条曲线 (不严谨地),
这条曲线称为运动的 $coord(x,t)$ 图象.

#let func = $x = 0.5 t^2$

@figure 是运动 #func 的 $coord(x,t)$ 图象,
从中我们可以看到运动的大体趋势,
也能估计点在某一时刻的大致位置.

#figure(
  caption: [#func 的图象],
  {
    cetz.canvas({
      import cetz.draw: *
      import cetz-plot.plot: *
      plot(
        axis-style: "school-book",
        size: (4, 3),
        x-tick-step: 0.5,
        y-tick-step: 0.5,
        x-max: 2.5,
        y-max: 2.5,
        x-label: $t$,
        y-label: $x$,
        add(
          domain: (0, 3),
          t => (t, 0.5 * t * t),
        ),
      )
    })
  },
) <figure>

这里推荐一个绘制函数图象的网站:
https://www.desmos.com/

== 变化率

速度是位置随时间的变化率,
加速度是速度随时间的变化率.
我们一般用 $v$ 表示速度 (velocity),
用 $a$ 表示加速度 (acceleration).
接下来以速度为例简要说明*变化率*的含义.

#definition[变化率][
  变化率描述了一个变量随另一个变量的变化快慢.
  对于一维运动 $x(t)$,
  在某个时间段 $t_1 ~ t_2$,
  点的*位置变化量* $Delta x = x(t_2) - x(t_1)$
  与*时间变化量* $Delta t = t_2 - t_1$
  的*比值* $Delta x \/ Delta t$
  称为该时间段位置 $x$ 随时间 $t$ 的*平均变化率*,
  即平均速度.

  把 $t_1,t_2$ 向某一时刻 $t_0$ 无限趋近,
  此时 $Delta t$ 无限趋近于0.
  在这个过程中, 如果平均变化率也无限趋近于某个定值,
  就将该定值称为 $t_0$ 时刻下位置随时间的*瞬时变化率*,
  简称位置随时间的*变化率*.

  // #figure(
  //   caption: [变化率],
  //   {
  //     let f = x => x * x * x - x
  //     let g = x => 3 * x * x - 1
  //     cetz.canvas({
  //       import cetz.draw: *
  //       import cetz-plot.plot: *
  //       plot(
  //         axis-style: none,
  //         size: (4, 3),
  //         x-label: $t$,
  //         y-label: $x$,
  //         x-tick-step: none,
  //         y-tick-step: none,
  //         {
  //           add(
  //             domain: (-0.4, 2),
  //             style: (stroke: black),
  //             f,
  //           )
  //           let a = 1
  //           add(
  //             domain: (0, 2),
  //             x => f(a) + (x - a) * g(a),
  //           )
  //           add(
  //             ((a, f(a)),),
  //             mark: "o",
  //             mark-size: 0.1,
  //             mark-style: (
  //               stroke: black,
  //               fill: white,
  //             ),
  //           )
  //           add-anchor("t0", (a, f(a)))
  //         },
  //         name: "plot",
  //       )
  //       mcontent("plot.t0", $(t_0, x(t_0))$, south-east)
  //     })
  //   },
  // )
]

我们所研究的运动一般具有良好的性质,
总能分成若干段,
使得每一段的运动都是连续平滑的,
不需要考虑速度和加速度不存在的情况.

定义中提到了 "无限趋近", 这是一个非常非常麻烦的概念,
我不想在这方面纠缠.
我只是想说, 运动学假定时间是无限可分的, 连续的,
时间间隔想多短就可以多短,
这是前面定义瞬时变化率的前提.
这样的系统我们称之为*连续系统*.

而实际的情况有一些不同,
时间并非无限可分,
它只能取特定的某些值:
`LuaSTG` 的状态更新和渲染是逐帧
(1帧约1/60秒) 进行的,
非整数帧的时间没有实际意义.
这样的系统我们称之为*离散系统*.
由于时间不能连续取值,
"瞬时" 的概念消失,
当然也就无法定义瞬时速度和加速度,
取而代之的是由差值定义:
$
  v(t) = x(t + 1) - x(t) \
  a(t) = v(t + 1) - v(t) \
$
或
$
  v(t) = x(t) - x(t - 1) \
  a(t) = v(t) - v(t - 1) \
$

连续和离散系统对同一问题可能得到不同的结果,
即使最小时间间隔非常小也不能保证二者结果相近
(例如混沌系统). 既然如此为什么我们还要在连续系统下讨论呢?
- 对于我们所研究的运动, 连续和离散系统的结论相近,
  且误差可以分析;
- 连续系统的图象通常是平滑曲线,
  而离散系统的图象是一堆散点, 连续系统在这方面更加直观;
- 连续系统的结论相对更简洁, 尽管探究过程严格来说需要导数, 积分等高等数学知识, 但只要我们不纠结论证细节就不用管那些;
- 离散系统有时会引出比较复杂的结论 (波粒就是一个例子).

== 二维运动

点在平面上运动时, 点的位置由二维坐标 $(x,y)$ 确定,
我们将向量 $rr=(x,y)$ 称为点的*位置向量*.

由一维运动类推,
点在时间段 $t_1 ~ t_2$ 的位置变化量
$Delta rr = rr(t_2) - rr(t_1) = (Delta x, Delta y)$
称为 $t_1~t_2$ 时间段的*位移*,

位置 $rr$ 随时间的变化率称为*速度*,
一般用 $vv$ 表示.
速度随时间的变化率称为加速度,
一般用 $aa$ 表示.

一个向量 (点) 的变化其实就是它各个分量的变化,
所以为了直观展现平面上点的运动情况,
我们尝试作出 $coord(x,t)$, $coord(y,t)$ 图象,
但这时就出了一点问题.

#figure(
  caption: [一个圆周运动的 $coord(x,t)$, $coord(y,t)$ 图象],
  cetz.canvas({
    import cetz.draw: *
    import cetz-plot.plot: *
    plot(
      axis-style: "school-book",
      x-tick-step: none,
      y-tick-step: none,
      size: (9, 2),
      {
        let w = 2
        add(
          domain: (0, 7),
          t => calc.cos(t * w),
        )
        add(
          domain: (0, 7),
          t => calc.sin(t * w),
        )
        annotate({
          mcontent((5.6, 0.6), $x(t)$, south)
          mcontent((6.3, -0.4), $y(t)$, north)
        })
      },
    )
  }),
) <circle-motion>

@circle-motion 是一个在圆周上运动的点的
$coord(x,t)$ 和 $coord(y,t)$ 图象,
尽管这样的图象能反映一部分的运动情况,
但这个运动最明显的特征 ------ 运动轨迹是圆周,
运动的速度大小恒定 ------
在图象中都没有展现出来.

== 路程和速率

引入*路程*的概念在一定程度上解决了这个问题.
路程是点在一段时间内运动轨迹的长度,
我们用 $Delta s$ 表示.
运动轨迹已知的情况下,
根据 $0~t$ 时间段的路程可以确定该时刻点的位置,
我们将 $0~t$ 时间段的路程记作 $s(t)$.

路程和位移都是考察一段时间内运动情况的量,
它们的主要区别在于:

#set align(center)
#table(
  columns: 3,
  table.header([], [*路程*], [*位移*]),
  [*数据类型*], [数值], [向量],
  [*非零情况*], [只要不静止, 就不为0], [即使不静止, 也可能为0],
  [*大小变化*], [不会变小], [可能增大, 减小或保持不变],
  [*是否与轨迹有关*], [与轨迹有关], [只与始末位置有关],
)
#set align(left)

一段时间内的路程和位移大小通常不相等,
仅在点作单向直线运动时, 路程和位移相等.

$0~t$ 时间段内的路程 $s(t)$ 可以确定点的位置,
自然地, 我们会想到 $s$ 随 $t$ 的变化率.

这个变化率我们称为*速率*,
一般用 $v$ 表示.
速率与速度有着密切的联系:
#theorem[速率与速度的关系][
  对于一个在平面上运动的点, 任意时刻
  + 速度的*大小* $abs(vv)$ 与速率 $v$ 相等;
  + 速度的*方向*与运动轨迹上对应点的*切线方向*相同或相反.
]

#conclude[]
